name: ESLint

on:
  push:
    branches: [main]
    # ESLint has a lot of files that it cares about. In particular though,
    # configuration files that Prettier might use will probably be used by
    # ESLint.
    paths:
      - .github/workflows/eslint.yml
      - package*.json
      - tsconfig*.json
      - '**/.eslint*'
      - '**/eslint.config.*'
      - '**/.prettier*' # Prettier config files
      - '**/prettier.config.*' # JS prettier config files
      - '**/*.editorconfig' # Used by prettier
      - '**/*.[cm]?jsx?'
      - '**/*.tsx?'
      - src/**
      - test/**
  pull_request:
    branches: [main]
    # Same as on push
    paths:
      - .github/workflows/eslint.yml
      - package*.json
      - tsconfig*.json
      - '**/.eslint*'
      - '**/eslint.config.*'
      - '**/.prettier*'
      - '**/prettier.config.*'
      - '**/*.editorconfig'
      - '**/*.[cm]?jsx?'
      - '**/*.tsx?'
      - src/**
      - test/**
  workflow_dispatch:

jobs:
  eslint:
    name: Run eslint scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    # Don't run for some dependabot PRs.
    # Specifically, stuff that shouldn't affect ESLint outputs.
    # Ex. vitest, husky
    if: |
      !(
        github.event_name == 'pull_request' &&
        github.actor == 'dependabot[bot]' &&
        (
          contains('dependabot/npm_and_yarn/vitest',        github.head_ref) ||
          contains('dependabot/npm_and_yarn/husky',         github.head_ref) ||
          contains('dependabot/npm_and_yarn/concurrently',  github.head_ref) ||
          contains('dependabot/npm_and_yarn/is-ci',         github.head_ref)
        )
      )
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: package-lock.json

      - run: npm install

      - name: Install ESLint SARIF Formatter
        run: npm install @microsoft/eslint-formatter-sarif

      - name: Run ESLint
        run: npx eslint .
          --config .eslintrc.yml
          --ext .js,.jsx,.ts,.tsx
          --format @microsoft/eslint-formatter-sarif
          --output-file eslint-results.sarif
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true
